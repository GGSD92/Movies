@model Movies.ViewModels.GendersViewModel
@using  Movies.Enums

<div class="modal-header">
    <h5 class="modal-title" id="exampleModalLabel"></h5>

</div>

<form action="@Url.Action(Model.ActionTypes.ToString())" method="post" id="form-edit">
    <div class="modal-body">

        @Html.HiddenFor(m => m.Selected.Id)
        @Html.HiddenFor(m => m.Selected.DateCreated)
        @Html.HiddenFor(m => m.Selected.DateModified)
        <div class="row">
            <div class="col-md-10">
                @Html.LabelFor(m => m.Selected.Name, new { style = "max-width: unset;" })
                <div class="input-group mb-2">
                    <div class="input-group-prepend">
                        <div class="input-group-text" style="width:3em;"><i class="fa fa-heart"></i></div>
                    </div>
                    @Html.TextBoxFor(m => m.Selected.Name, new { @class = "form-control", style = "max-width: unset;" })
                </div>
                @Html.ValidationMessageFor(m => m.Selected.Name, null, new { @class = "text-warning" })
            </div>
            <div class="col-md-10">
                @Html.LabelFor(m => m.Selected.Description, new { style = "max-width: unset;" })
                <div class="input-group mb-2">
                    <div class="input-group-prepend">
                        <div class="input-group-text" style="width:3em;"><i class="fa fa-heart"></i></div>
                    </div>
                    @Html.TextBoxFor(m => m.Selected.Description, "Description", new { @class = "form-control", style = "max-width: unset;" })
                </div>
                @Html.ValidationMessageFor(m => m.Selected.Description, null, new { @class = "text-warning" })
            </div>
        </div>
    </div>
    <div class="modal-footer">
        <button type="button" onclick="toggleModificationModal()" class="btn btn-secondary" data-dismiss="modal">Close</button>
        @{
            if (Model.ActionTypes == ActionTypes.Edit)
            {
                <input type="button" id="saveChanges" onclick="saveFormData(false, 'Genders', '')" value="Save" class="btn btn-primary" style="max-width:unset;" />
            }
            else if (Model.ActionTypes == ActionTypes.Add)
            {
                <input type="button" id="saveChanges" onclick="saveFormData(true, 'Genders', '')" value="Save" class="btn btn-primary" style="max-width:unset;" />
            }
        }

    </div>
</form>

